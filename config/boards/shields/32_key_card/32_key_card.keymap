#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};


/ {
    behaviors {    
        ht: hold_tap {
            label = "hold_tap";    
            compatible = "zmk,behavior-hold-tap";    
            #binding-cells = <2>;    
            flavor = "tap-preferred";    
            tapping-term-ms = <220>;    
            quick-tap-ms = <150>;    
            global-quick-tap;    
            bindings = <&kp>, <&kp>;    
        };    
    };    
    
    conditional_layers {    
        compatible = "zmk,conditional-layers";    
        tri_layer {    
            if-layers = <1 2>;    
            then-layer = <3>;    
        };    
    };    

  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        //╭──────┬──────┬──────┬──────┬──────╮                          ╭────────┬──────────┬──────┬──────┬──────────╮
        //│  '   │  ,   │  .   │  p   │  y   │                          │  l     │    r     │  c   │  g   │   f      │
         &kp SINGLE_QUOTE  &kp COMMA  &kp DOT  &kp P  &kp Y                       &kp L    &kp R   &kp C  &kp G    &kp F
        //├──────┼──────┼──────┼──────┼──────┤                          ├────────┼──────────┼──────┼──────┼──────────┤
        //│  a   │  o   │  e   │  u   │  i   │                          │    s   │     n    │   t  │  h   │   d      │
           &kp A  &kp O  &kp E  &kp U  &kp I                             &kp S    &kp N   &kp T   &kp H    &kp D 
        //├──────┼──────┼──────┼──────┼──────┼─────────╮       ╭────────┼────────┼──────────┼──────┼──────┼──────────┤
        //│  ;   │  q   │  j   │  k   │  x   │         │       │   z    │    v   │    w     │  m   │  b   │  SPACE   │
         &kp SEMI  &kp Q  &kp C  &kp K  &kp X  &lt 2 SPACE      &kp Z     &kp V  &kp W       &kp M   &kp B   &lt 1 SPACE
        //╰──────┴──────┴──────┴──────┴──────┴─────────╯       ╰────────┴────────┴──────────┴──────┴──────┴──────────╯
        >;
    };
    left_layer {
      bindings = <
        //╭────────┬──────────┬─────────┬──────────┬─────────╮                            ╭────────┬──────────┬────────┬─────────┬───────────╮
        //│  1     │  2       │  3      │  4       │  5      │                            │  {     │    }     │  [     │  ]      │   |       │
          &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N4  &kp KP_N5                           &kp LBRC  &kp RBRC  &kp LBKT  &kp RBKT  &kp PIPE
        //├────────┼──────────┼─────────┼──────────┼─────────┤                            ├────────┼──────────┼────────┼─────────┼───────────┤
        //│  6     │  7       │  8      │  9       │  0      │                            │    <   │     >    │   (    │  )      │   ~       │
          &kp KP_N6  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_N0                           &kp LT     &kp GT    &kp LPAR   &kp RPAR  &kp TILDE
        //├────────┼──────────┼─────────┼──────────┼─────────┼─────────╮         ╭────────┼────────┼──────────┼────────┼─────────┼───────────┤
        //│  +     │  -       │  *      │  /       │  =      │         │         │   /    │    .   │    ,     │  ,     │  .      │  SPACE    │
           &kp PLUS  &kp MINUS  &kp STAR  &kp BSLH  &kp EQUAL  &lt 2 SPACE       &kp BSLH  &kp DOT  &kp COMMA  &kp COMMA  &kp DOT  &lt 1 SPACE
        //╰────────┴──────────┴─────────┴──────────┴─────────┴─────────╯         ╰────────┴────────┴──────────┴────────┴─────────┴───────────╯
        >;
    };
    right_layer {
      bindings = <
        //╭────────┬──────────┬─────────┬──────────┬─────────╮                            ╭────────┬──────────┬────────┬─────────┬───────────╮
        //│  1     │  2       │  3      │  4       │  5      │                            │  {     │    }     │  [     │  ]      │   |       │
            &kp KP_N1    &kp KP_N2      &kp KP_N3     &kp KP_N4      &kp KP_N5                                  &kp LBRC  &kp RBRC  &kp LBKT  &kp RBKT  &kp PIPE
        //├────────┼──────────┼─────────┼──────────┼─────────┤                            ├────────┼──────────┼────────┼─────────┼───────────┤
        //│  6     │  7       │  8      │  9       │  0      │                            │    <   │     >    │   (    │  )      │   ~       │
            &kp KP_N6    &kp KP_N7      &kp KP_N8     &kp KP_N9      &kp KP_N0                                  &kp LT  &kp GT     &kp LPAR  &kp RPAR  &kp TILDE
        //├────────┼──────────┼─────────┼──────────┼─────────┼─────────╮         ╭────────┼────────┼──────────┼────────┼─────────┼───────────┤
        //│  +     │  -       │  *      │  /       │  =      │         │         │   /    │    .   │    ,     │  ,     │  .      │  SPACE    │
           &kp PLUS  &kp MINUS  &kp STAR  &kp BSLH  &kp EQUAL  &lt 2 SPACE       &kp BSLH  &kp DOT  &kp COMMA  &kp COMMA  &kp DOT  &lt 1 SPACE
        //╰────────┴──────────┴─────────┴──────────┴─────────┴─────────╯         ╰────────┴────────┴──────────┴────────┴─────────┴───────────╯
        >;
    };
    tri_layer {
      bindings = <
        //╭────────┬──────────┬─────────┬──────────┬─────────╮                            ╭────────┬──────────┬────────┬─────────┬───────────╮
        //│  1     │  2       │  3      │  4       │  5      │                            │  {     │    }     │  [     │  ]      │   |       │
            &kp 1    &kp 2      &kp 3     &kp 4      &kp 5                                  &kp LBRC  &kp RBRC  &kp LBKT  &kp RBKT  &kp PIPE
        //├────────┼──────────┼─────────┼──────────┼─────────┤                            ├────────┼──────────┼────────┼─────────┼───────────┤
        //│  6     │  7       │  8      │  9       │  0      │                            │    <   │     >    │   (    │  )      │   ~       │
            &kp 6    &kp 7      &kp 8     &kp 9      &kp 0                                  &kp LT  &kp GT     &kp LPAR  &kp RPAR  &kp TILDE
        //├────────┼──────────┼─────────┼──────────┼─────────┼─────────╮         ╭────────┼────────┼──────────┼────────┼─────────┼───────────┤
        //│  +     │  -       │  *      │  /       │  =      │         │         │   /    │    .   │    ,     │  ,     │  .      │  SPACE    │
           &kp PLUS  &kp MINUS  &kp STAR  &kp BSLH  &kp EQUAL  &lt 2 SPACE        &kp BSLH  &kp DOT  &kp COMMA  &kp COMMA  &kp DOT  &lt 1 SPACE
        //╰────────┴──────────┴─────────┴──────────┴─────────┴─────────╯         ╰────────┴────────┴──────────┴────────┴─────────┴───────────╯
        >;
    };
  };
};
//&td &caps_word. Tap dance caps word for double tap. Hold for shift. Tap once for space?
